import '../../utils/parser_utils.dart';
import '../base/application_info.dart';

class ApplicationInfoImpl extends ApplicationInfo {

  ApplicationInfoImpl(Map<String, dynamic> data,): super(
    className: data["className"],
    compatibleWidthLimitDp: data["compatibleWidthLimitDp"],
    dataDir: data["dataDir"],
    descriptionRes: data["descriptionRes"],
    enabled: data["enabled"],
    flags: data["flags"],
    largestWidthLimitDp: data["largestWidthLimitDp"],
    processName: data["processName"],
    publicSourceDir: data["publicSourceDir"],
    requiresSmallestWidthDp: data["requiresSmallestWidthDp"],
    sourceDir: data["sourceDir"],
    splitPublicSourceDirs: asTypedList<String>(data["splitPublicSourceDirs"],),
    splitSourceDirs: asTypedList<String>(data["splitSourceDirs"],),
    taskAffinity: data["taskAffinity"],
    theme: data["theme"],
    uiOptions: data["uiOptions"],
    uid: data["uid"],
    manageSpaceActivityName: data["manageSpaceActivityName"],
    nativeLibraryDir: data["nativeLibraryDir"],
    permission: data["permission"],
    sharedLibraryFiles: asTypedList<String>(data["sharedLibraryFiles"],),
    backupAgentName: data["backupAgentName"],
    targetSdkVersion: data["targetSdkVersion"],
    deviceProtectedDataDir: data["deviceProtectedDataDir"],
    minSdkVersion: data["minSdkVersion"],
    category: data["category"],
    splitNames: asTypedList<String>(data["splitNames"],),
    storageUuid: data["storageUuid"],
    isVirtualPreload: data["isVirtualPreload"],
    appComponentFactory: data["appComponentFactory"],
    isProfileableByShell: data["isProfileableByShell"],
    isResourceOverlay: data["isResourceOverlay"],
    gwpAsanMode: data["gwpAsanMode"],
    compileSdkVersion: data["compileSdkVersion"],
    compileSdkVersionCodename: data["compileSdkVersionCodename"],
    isProfileable: data["isProfileable"],
    memtagMode: data["memtagMode"],
    nativeHeapZeroInitialized: data["nativeHeapZeroInitialized"],
    requestRawExternalStorageAccess: data["requestRawExternalStorageAccess"],
    areAttributionsUserVisible: data["areAttributionsUserVisible"],
    packageItemInfo: data,
  );
}